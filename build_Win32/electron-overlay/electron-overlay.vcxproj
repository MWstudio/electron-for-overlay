<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{63F5CB03-4853-38E8-84BD-E4F387740A6F}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>Win32</Platform>
    <ProjectName>electron-overlay</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">electron-overlay.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">electron-overlay</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.node</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">electron-overlay.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">electron-overlay</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.node</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">electron-overlay.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">electron-overlay</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.node</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">electron-overlay.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">electron-overlay</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.node</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR="Debug";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR=\"Debug\";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
xcopy "C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32/Release\electron-overlay.node" "C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay\" /S /Y /E
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\x64\node.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <DelayLoadDLLs>NODE.EXE</DelayLoadDLLs>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>/build_Win32/Debug/electron-overlay.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/Debug/electron-overlay.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR="Release";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR=\"Release\";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
xcopy "C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32/Release\electron-overlay.node" "C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay\" /S /Y /E
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\x64\node.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <DelayLoadDLLs>NODE.EXE</DelayLoadDLLs>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>/build_Win32/Release/electron-overlay.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/Release/electron-overlay.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR="MinSizeRel";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR=\"MinSizeRel\";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
xcopy "C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32/Release\electron-overlay.node" "C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay\" /S /Y /E
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\x64\node.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <DelayLoadDLLs>NODE.EXE</DelayLoadDLLs>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>/build_Win32/MinSizeRel/electron-overlay.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/MinSizeRel/electron-overlay.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR="RelWithDebInfo";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NAPI_VERSION=6;NAPI_EXPERIMENTAL;NOMINMAX;_WIN32_WINNT=0x0601;UNICODE;_UNICODE;CMAKE_INTDIR=\"RelWithDebInfo\";electron_overlay_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src;C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\include\node;C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\node-addon-api;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
xcopy "C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32/Release\electron-overlay.node" "C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay\" /S /Y /E
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>C:\Users\lmwlj\.cmake-js\electron-x64\v16.0.10\x64\node.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <DelayLoadDLLs>NODE.EXE</DelayLoadDLLs>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>/build_Win32/RelWithDebInfo/electron-overlay.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/RelWithDebInfo/electron-overlay.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master -BC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32 --check-stamp-file C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/electron-overlay/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\electron-overlay\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master -BC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32 --check-stamp-file C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/electron-overlay/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\electron-overlay\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master -BC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32 --check-stamp-file C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/electron-overlay/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\electron-overlay\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/electron-overlay/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master -BC:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32 --check-stamp-file C:/Users/lmwlj/OneDrive/Desktop/electron-quick-start-master/build_Win32/electron-overlay/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\electron-overlay\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src\ipc\ipccenter.cc" />
    <ClCompile Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src\ipc\ipclink.cc" />
    <ClCompile Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src\main.cc" />
    <ClCompile Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\electron-overlay\src\utils\node_async_call.cc" />
    <ClCompile Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\node_modules\cmake-js\lib\cpp\win_delay_load_hook.cc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\lmwlj\OneDrive\Desktop\electron-quick-start-master\build_Win32\ZERO_CHECK.proj">
      <Project>{EDBA11DC-55FA-3218-8A91-C71FF6109975}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>